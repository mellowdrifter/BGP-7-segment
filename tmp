#!/usr/bin/env python

import datetime
import json
import time
import random
import os
from matplotlib import pyplot as plt
import numpy as np
import matplotlib.dates as mdates
from pylab import *

FILENAME = "bgp2.json"
CURRENT_DATE = time.strftime("%d/%m/%Y")

def loadvalues(filename):
    with open(filename, 'r') as f:
        entries = json.load(f)
    return entries

def savevalues(entries, filename):
    with open(filename, 'w') as f:
        json.dump(entries, f, indent=1)

def graphdata_v4(entries):
    date_time = []
    v4_prefixes = []
    for entry in entries:
        v4_prefixes.append(entry["v4total"])
        date_time.append(datetime.datetime.fromtimestamp(entry["time"]))
    plt.figure(figsize=(6.82496, 5.12))
    ax = subplot(111)
    xfmt = mdates.DateFormatter('%Y-%m-%d')
    ax.xaxis.set_major_formatter(xfmt)
    plt.suptitle('IPv4 table movement for week ending ' + CURRENT_DATE, fontsize=12)
    ax.grid(True)
    ax.spines["top"].set_visible(False)
    ax.spines["bottom"].set_visible(False)
    ax.spines["right"].set_visible(False)
    ax.spines["left"].set_visible(False)
    ax.get_xaxis().tick_bottom()
    ax.get_yaxis().tick_left()
    plt.xticks(fontsize=8, rotation=25)
    plt.yticks(fontsize=8)
    plt.ticklabel_format(axis='y', style='plain', useOffset=False)
    plt.tick_params(axis="both", which="both", bottom="off", top="off",
                            labelbottom="on", left="off", right="off", labelleft="on")
    plt.plot(date_time, v4_prefixes, lw=2, alpha=0.4, color='#238341')
    plt.savefig('graph_v4.png')

def graphdata_v6(entries):
    date_time = []
    v6_prefixes = []
    for entry in entries:
        v6_prefixes.append(entry["v6total"])
        date_time.append(datetime.datetime.fromtimestamp(entry["time"]))
    plt.figure(figsize=(12, 9))
    ax = subplot(111)
    xfmt = mdates.DateFormatter('%Y-%m-%d')
    ax.xaxis.set_major_formatter(xfmt)
    ax.grid(True)
    ax.spines["top"].set_visible(False)
    ax.spines["bottom"].set_visible(False)
    ax.spines["right"].set_visible(False)
    ax.spines["left"].set_visible(False)
    ax.get_xaxis().tick_bottom()
    ax.get_yaxis().tick_left()
    plt.xticks(fontsize=14, rotation=25)
    plt.ticklabel_format(axis='y', style='plain', useOffset=False)
    plt.tick_params(axis="both", which="both", bottom="off", top="off",
                                          labelbottom="on", left="off", right="off", labelleft="on")
    plt.plot(date_time, v6_prefixes, lw=2.5, alpha=0.4, color='#0041A0')
    savefig('graph_v6.png')

def main():
    entries = []
    # load existing if they exist
    if os.path.isfile(FILENAME):
        entries = loadvalues(FILENAME)

    graphdata_v6(entries)
    graphdata_v4(entries)

if __name__ == "__main__":
    main()
